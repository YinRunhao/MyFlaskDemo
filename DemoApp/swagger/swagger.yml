swagger: "2.0"
info:
  description: "Flask 小型API Demo"
  version: "1.0"
  title: "Flask Demo"
# Controllers
tags:
  - name: "Api"
    description: "Demo接口"
schemes:
  - "http"
# 可访问的URL
paths:
  /api:
    # Http方法
    get:
      # 属于哪个Controller
      tags:
        - "Api"
      summary: "测试连通性的接口"
      # 回送的请求头
      produces:
        - "application/json"
      responses:
        "200":
          description: "请求成功"
          # 回送类型
          schema:
            # 绑定后面定义的类型
            $ref: "#/definitions/ApiResult"
  /api/login:
    post:
      tags:
        - "Api"
      summary: "用户登录"
      # 接受的请求头
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        # 参数放在body里面
        - in: "body"
          name: "body"
          description: "登录信息"
          required: true
          schema:
            $ref: "#/definitions/LoginDto"
      responses:
        "200":
          description: "登录成功，回送中带有Token"
          schema:
            $ref: "#/definitions/ApiResult"
        "400":
          description: "请求失败"
          schema:
            $ref: "#/definitions/ApiResult"
  /api/info:
    get:
      tags:
        - "Api"
      summary: "获取用户信息"
      # 接受的请求头
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "获取记录成功"
          schema:
            $ref: "#/definitions/ApiResult"
        "403":
          description: "Token错误"
        "401":
          description: "请求未带Token"
  /api/articles/{usrNm}:
    get:
      tags:
        - "Api"
      summary: "获取用户的所有文章"
      # 回送的请求头
      produces:
        - "application/json"
      parameters:
        - name: "usrNm"
          # 从url中带参数
          in: "path"
          description: "用户名"
          required: true
      responses:
        "200":
          description: "成功"
          schema:
            $ref: "#/definitions/ApiResult"
        "400":
          description: "操作失败"
          schema:
            $ref: "#/definitions/ApiResult"
        "404":
          description: "用户名不存在"
          schema:
            $ref: "#/definitions/ApiResult"
# 类型定义
definitions:
  LoginDto:
    type: "object"
    required:
      - userNm
      - psd
    properties:
      userNm:
        type: "string"
        description: "用户名"
      psd:
        type: "string"
        description: "密码"
  UserDto:
    type: "object"
    required:
      - UserName
    properties:
      UserName:
        type: "string"
      Sex:
        type: "string"
        description: "male:男; female:女"
      City:
        type: "string"
        description: "所在城市"
  ArticleDto:
    type: "object"
    properties:
      Title:
        type: "string"
        description: "标题"
      Content:
        type: "string"
        description: "内容"
  ApiResult:
    type: "object"
    properties:
      success:
        type: "boolean"
      msg:
        type: "string"
      errCode:
        type: "integer"
        format: "int32"
      result:
        type: "object"
        default: ~
